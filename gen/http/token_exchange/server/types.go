// Code generated by goa v3.16.0, DO NOT EDIT.
//
// tokenExchange HTTP server types
//
// Command:
// $ goa gen kubernetes-federated-credential-controller/design

package server

import (
	tokenexchange "kubernetes-federated-credential-controller/gen/token_exchange"
)

// ExchangeTokenRequestBody is the type of the "tokenExchange" service
// "exchangeToken" endpoint HTTP request body.
type ExchangeTokenRequestBody struct {
	// The JWT Token from the impersonating service account
	JWT *string `form:"jwt,omitempty" json:"jwt,omitempty" xml:"jwt,omitempty"`
	// The target namespace for impersonation
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// The target serviceAccount
	ServiceAccountName *string `form:"serviceAccountName,omitempty" json:"serviceAccountName,omitempty" xml:"serviceAccountName,omitempty"`
}

// NewExchangeTokenPayload builds a tokenExchange service exchangeToken
// endpoint payload.
func NewExchangeTokenPayload(body *ExchangeTokenRequestBody) *tokenexchange.ExchangeTokenPayload {
	v := &tokenexchange.ExchangeTokenPayload{
		JWT:                body.JWT,
		Namespace:          body.Namespace,
		ServiceAccountName: body.ServiceAccountName,
	}

	return v
}
