// Code generated by goa v3.16.0, DO NOT EDIT.
//
// tokenExchange HTTP client types
//
// Command:
// $ goa gen kubernetes-federated-credential-controller/design

package client

import (
	tokenexchange "kubernetes-federated-credential-controller/gen/token_exchange"
)

// ExchangeTokenRequestBody is the type of the "tokenExchange" service
// "exchangeToken" endpoint HTTP request body.
type ExchangeTokenRequestBody struct {
	// The JWT Token from the impersonating service account
	JWT *string `form:"jwt,omitempty" json:"jwt,omitempty" xml:"jwt,omitempty"`
	// The target namespace for impersonation
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// The target serviceAccount
	ServiceAccount *string `form:"serviceAccount,omitempty" json:"serviceAccount,omitempty" xml:"serviceAccount,omitempty"`
}

// NewExchangeTokenRequestBody builds the HTTP request body from the payload of
// the "exchangeToken" endpoint of the "tokenExchange" service.
func NewExchangeTokenRequestBody(p *tokenexchange.ExchangeTokenPayload) *ExchangeTokenRequestBody {
	body := &ExchangeTokenRequestBody{
		JWT:            p.JWT,
		Namespace:      p.Namespace,
		ServiceAccount: p.ServiceAccount,
	}
	return body
}
