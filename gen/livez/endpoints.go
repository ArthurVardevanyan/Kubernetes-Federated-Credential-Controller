// Code generated by goa v3.16.1, DO NOT EDIT.
//
// livez endpoints
//
// Command:
// $ goa gen k8s-federated-credential-api/design

package livez

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "livez" service endpoints.
type Endpoints struct {
	Livez goa.Endpoint
}

// NewEndpoints wraps the methods of the "livez" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Livez: NewLivezEndpoint(s),
	}
}

// Use applies the given middleware to all the "livez" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Livez = m(e.Livez)
}

// NewLivezEndpoint returns an endpoint function that calls the method "livez"
// of service "livez".
func NewLivezEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Livez(ctx)
	}
}
