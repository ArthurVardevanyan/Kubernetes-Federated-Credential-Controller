// Code generated by goa v3.16.1, DO NOT EDIT.
//
// tokenExchange client
//
// Command:
// $ goa gen k8s-federated-credential-api/design

package tokenexchange

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "tokenExchange" service client.
type Client struct {
	ExchangeTokenEndpoint goa.Endpoint
}

// NewClient initializes a "tokenExchange" service client given the endpoints.
func NewClient(exchangeToken goa.Endpoint) *Client {
	return &Client{
		ExchangeTokenEndpoint: exchangeToken,
	}
}

// ExchangeToken calls the "exchangeToken" endpoint of the "tokenExchange"
// service.
func (c *Client) ExchangeToken(ctx context.Context, p *ExchangeTokenPayload) (res string, err error) {
	var ires any
	ires, err = c.ExchangeTokenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
